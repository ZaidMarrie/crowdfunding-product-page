{"version":3,"sources":["script.js"],"names":["navToggleBtn","document","getElementById","defaultModal","successModal","defaultModalCloseBtn","querySelector","successModalCloseBtn","buttons","querySelectorAll","submitBtns","modalCards","toggleNavMenu","event","currentTarget","isMenuExpanded","JSON","parse","getAttribute","setAttribute","handleButtonClick","isBookMarked","classList","contains","displayModal","modalEl","closeModal","handleModalEvents","cardRadioEl","cardFooterEl","isChecked","checked","forEach","pledgeEl","remove","card","add","addEventListener","button"],"mappings":"AAAA,aAAA,IAAMA,aAAeC,SAASC,eAAe,gBACvCC,aAAeF,SAASC,eAAe,gBACvCE,aAAeH,SAASC,eAAe,gBACvCG,qBAAuBJ,SAASK,cAAc,8BAC9CC,qBAAuBN,SAASK,cAAc,8BAC9CE,QAAUP,SAASQ,iBAAiB,0BACpCC,WAAaT,SAASQ,iBAAiB,gBACvCE,WAAaV,SAASQ,iBAAiB,gBAiB7C,SAASG,cAAcC,GACtB,IAAQC,EAAkBD,EAAlBC,cACFC,EAAiBC,KAAKC,MAAMH,EAAcI,aAAa,kBAE7DJ,EAAcK,aAAa,iBAAkBJ,EAC7C,CAGD,SAASK,kBAAkBP,GAC1B,IAAQC,EAAkBD,EAAlBC,cACFO,EAAeL,KAAKC,MAAMH,EAAcI,aAAa,oBAEvDJ,EAAcQ,UAAUC,SAAS,iBACpCT,EAAcK,aAAa,mBAAoBE,GAE/CG,aAAarB,aAEd,CAED,SAASqB,aAAaC,GACrBA,EAAQN,aAAa,iBAAiB,GACtCM,EAAQN,aAAa,eAAe,EACpC,CAED,SAASO,WAAWD,GACnBA,EAAQN,aAAa,iBAAiB,GACtCM,EAAQN,aAAa,eAAe,EACpC,CAED,SAASQ,kBAAkBd,GAC1B,IAAQC,EAAkBD,EAAlBC,cACFc,EAAcd,EAAcR,cAAc,iBAC1CuB,EAAef,EAAcR,cAAc,iBAC3CwB,EAAYF,EAAYG,QACN9B,SAASQ,iBAAiB,8BAElCuB,SAAQ,SAACC,GAAD,OAAcA,EAASX,UAAUY,OAAO,SAAxC,IAExBvB,WAAWqB,SAAQ,SAACG,GACfA,IAASrB,GACZqB,EAAKhB,aAAa,iBAAiB,EAEpC,IAEGU,GAAgBC,IACnBhB,EAAcK,aAAa,iBAAiB,GAC5CU,EAAaP,UAAUc,IAAI,UAE5B,CA9DDpC,aAAaqC,iBAAiB,QAASzB,eACvCP,qBAAqBgC,iBAAiB,SAAS,WAAA,OAAMX,WAAWvB,aAAjB,IAC/CI,qBAAqB8B,iBAAiB,SAAS,WAAA,OAAMX,WAAWtB,aAAjB,IAE/CO,WAAWqB,SAAQ,SAACG,GAAD,OAAUA,EAAKE,iBAAiB,QAASV,kBAAzC,IACnBnB,QAAQwB,SAAQ,SAACM,GAAD,OAAYA,EAAOD,iBAAiB,QAASjB,kBAA7C,IAChBV,WAAWsB,SAAQ,SAACM,GAAD,OAClBA,EAAOD,iBAAiB,SAAS,WAChCX,WAAWvB,cACXqB,aAAapB,aACb,GAJiB","file":"script.js","sourcesContent":["const navToggleBtn = document.getElementById(\"navToggleBtn\");\r\nconst defaultModal = document.getElementById(\"defaultModal\");\r\nconst successModal = document.getElementById(\"successModal\");\r\nconst defaultModalCloseBtn = document.querySelector(\".modal__close-btn--default\");\r\nconst successModalCloseBtn = document.querySelector(\".modal__close-btn--success\");\r\nconst buttons = document.querySelectorAll(\".btn:not(.btn--submit)\");\r\nconst submitBtns = document.querySelectorAll(\".btn--submit\");\r\nconst modalCards = document.querySelectorAll(\".card--modal\");\r\n\r\n// Events\r\nnavToggleBtn.addEventListener(\"click\", toggleNavMenu);\r\ndefaultModalCloseBtn.addEventListener(\"click\", () => closeModal(defaultModal));\r\nsuccessModalCloseBtn.addEventListener(\"click\", () => closeModal(successModal));\r\n\r\nmodalCards.forEach((card) => card.addEventListener(\"click\", handleModalEvents));\r\nbuttons.forEach((button) => button.addEventListener(\"click\", handleButtonClick));\r\nsubmitBtns.forEach((button) =>\r\n\tbutton.addEventListener(\"click\", () => {\r\n\t\tcloseModal(defaultModal);\r\n\t\tdisplayModal(successModal);\r\n\t})\r\n);\r\n\r\n// Expands navigation menu open/close (only on small screen sizes)\r\nfunction toggleNavMenu(event) {\r\n\tconst { currentTarget } = event;\r\n\tconst isMenuExpanded = JSON.parse(currentTarget.getAttribute(\"aria-expanded\"));\r\n\r\n\tcurrentTarget.setAttribute(\"aria-expanded\", !isMenuExpanded);\r\n}\r\n\r\n// Handles button clicks for every button\r\nfunction handleButtonClick(event) {\r\n\tconst { currentTarget } = event;\r\n\tconst isBookMarked = JSON.parse(currentTarget.getAttribute(\"data-bookmarked\"));\r\n\r\n\tif (currentTarget.classList.contains(\"btn--bookmark\")) {\r\n\t\tcurrentTarget.setAttribute(\"data-bookmarked\", !isBookMarked);\r\n\t} else {\r\n\t\tdisplayModal(defaultModal);\r\n\t}\r\n}\r\n\r\nfunction displayModal(modalEl) {\r\n\tmodalEl.setAttribute(\"aria-expanded\", true);\r\n\tmodalEl.setAttribute(\"aria-hidden\", false);\r\n}\r\n\r\nfunction closeModal(modalEl) {\r\n\tmodalEl.setAttribute(\"aria-expanded\", false);\r\n\tmodalEl.setAttribute(\"aria-hidden\", true);\r\n}\r\n\r\nfunction handleModalEvents(event) {\r\n\tconst { currentTarget } = event;\r\n\tconst cardRadioEl = currentTarget.querySelector(\".modal__input\");\r\n\tconst cardFooterEl = currentTarget.querySelector(\".card__footer\");\r\n\tconst isChecked = cardRadioEl.checked;\r\n\tconst pledgeActionEls = document.querySelectorAll(\".card--modal .card__footer\");\r\n\r\n\tpledgeActionEls.forEach((pledgeEl) => pledgeEl.classList.remove(\"active\"));\r\n\r\n\tmodalCards.forEach((card) => {\r\n\t\tif (card !== currentTarget) {\r\n\t\t\tcard.setAttribute(\"data-selected\", false);\r\n\t\t}\r\n\t});\r\n\r\n\tif (cardFooterEl && isChecked) {\r\n\t\tcurrentTarget.setAttribute(\"data-selected\", true);\r\n\t\tcardFooterEl.classList.add(\"active\");\r\n\t}\r\n}\r\n"]}